<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 会话Session ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"></bean>

	<!-- custom shiro session listener -->
	<bean id="customSessionListener" class="com.myproject.shiro.listener.CustomSessionListener">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
	</bean>

	<!-- custom shiro session listener -->
	<bean id="customShiroSessionDAO" class="com.myproject.shiro.CustomShiroSessionDAO">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>
	
	<!-- 手动操作Session，管理Session -->
	<bean id="customSessionManager" class="com.myproject.shiro.session.CustomSessionManager">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
		<property name="customShiroSessionDAO" ref="customShiroSessionDAO" />
	</bean>
	
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		 <!-- 间隔多少时间检查，不配置是60分钟 -->
	     <property name="interval" value="18000000" />
	     <property name="sessionManager" ref="sessionManager" />
	</bean>
	
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="sampleRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="customShiroCacheManager"/>
	</bean>
	
	<bean id="customShiroCacheManager" class="com.myproject.shiro.cache.CustomShiroCacheManager">
		<property name="shiroCacheManager" ref="shiroCacheManager" />
	</bean>

	<!-- shiro 缓存实现，用的是redis -->
	<bean id="shiroCacheManager" class="com.myproject.shiro.cache.impl.JedisShiroCacheManager">
		<property name="jedisManager" ref="jedisManager" />
	</bean>

	<bean id="jedisManager" class="com.myproject.shiro.cache.JedisManager">
		<property name="jedisPool" ref="jedisPool" />
	</bean>

	<!-- 授权 认证 -->
	<bean id="sampleRealm" class="com.myproject.shiro.token.SampleRealm"></bean>

	<!-- Session Manager -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 相隔多久检查一次session的有效性 session 有效时间为半小时 （毫秒单位） -->
		<property name="sessionValidationInterval" value="1800000"></property>
		<property name="globalSessionTimeout" value="1800000"></property>
		<property name="sessionDAO" ref="customShiroSessionDAO"></property>
		<!-- session 监听， 可以多个 -->
		<property name="sessionListeners">
			<list>
				<ref bean="customSessionListener" />
			</list>
		</property>
		<!-- 间隔多少时间检查， 不配置是60分钟 -->
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"></property>
		<!-- 是否开启检测，默认开启 -->
		<property name="sessionValidationSchedulerEnabled" value="true"></property>
		<!-- 是否删除无效的，默认开启 -->
		<property name="deleteInvalidSessions" value="true"></property>
	</bean>

	<!-- session 创建、删除、查询 -->
	<bean id="jedisShiroSessionRepository" class="com.myproject.shiro.cache.JedisShiroSessionRepository">
		<property name="jedisManager" ref="jedisManager"></property>
	</bean>

	<!-- 自定义角色过滤器 支持多个角色可以访问同一个资源 eg:/home.jsp = authc,roleOR[admin,user] 用户有admin或者user角色 
		就可以访问 -->

	<!-- 认证数据库存储 -->
	<bean id="shiroManager" class="com.myproject.shiro.service.impl.ShiroManagerImpl" />
	<bean id="kickoutSessionFilter" class="com.myproject.filter.KickoutSessionFilter" />
	<bean id="login" class="com.myproject.filter.LoginFilter" />
	<bean id="permission" class="com.myproject.filter.PermissionFilter" />
	<bean id="role" class="com.myproject.filter.RoleFilter" />
	<bean id="simple" class="com.myproject.filter.SimpleAuthFilter" />

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="LoginUrl" value="login.do"></property>
		<property name="successUrl" value="/"></property>
		<property name="unauthorizedUrl" value="unauthorized.do"></property>
		<!-- 初始配置，现采用自定义 -->
		<!-- <property name="filterChainDefinitions" > -->
		<!-- <value> -->
		<!-- /** = anon -->
		<!-- /page/login.jsp = anon -->
		<!-- /page/register/* = anon -->
		<!-- /page/index.jsp = authc -->
		<!-- /page/addItem* = authc,roles[数据管理员] -->
		<!-- /page/file* = authc,roleOR[普通用户,数据管理员] -->
		<!-- /page/listItems* = authc,roleOR[数据管理员,普通用户] -->
		<!-- /page/showItem* = authc,roleOR[数据管理员,普通用户] -->
		<!-- /page/updateItem*=authc,roles[数据管理员] -->
		<!-- </value> -->
		<!-- </property> -->
		<!-- 读取初始自定义权限内容 -->
		<property name="filterChainDefinitions" value="#{shiroManager.loadFilterChainDefinitions()}"></property>
		<property name="filters">
			<util:map>
				<entry key="login" value-ref="login"></entry>
				<entry key="role" value-ref="role"></entry>
				<entry key="simple" value-ref="simple"></entry>
				<entry key="permission" value-ref="permission"></entry>
				<entry key="kickout" value-ref="kickoutSessionFilter"></entry>
			</util:map>
		</property>
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

	<import resource="classpath:config/spring-redis.xml" />

</beans>